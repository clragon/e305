name: Flutter CI

# This workflow is triggered on pushes to the repository.

on: push

jobs:
  ios-build:
    runs-on: macos-latest
    steps:
    - name: setup actions
      uses: actions/checkout@v1 

    - name: setup flutter
      uses: subosito/flutter-action@v1
      with:
        channel: 'stable' 
        
    - name: configure release version
      id: git_vars
      run: |
        echo "GITHUB_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: get dependencies
      run: flutter pub get

    - name: build release
      run: flutter build ios --no-codesign --dart-define=branch=$GITHUB_BRANCH --dart-define=commit=$GITHUB_SHA_SHORT

    - name: package release
      run: |
        cd build/ios/iphoneos
        mkdir Payload
        mv Runner.app Payload/Runner.app
        zip -9 -r e305.zip Payload
        mv e305.zip ../../../e305.ipa
    
    # Upload generated apk to the artifacts.
    - name: upload release
      uses: actions/upload-artifact@v1
      with:
        name: release-ios
        path: e305.ipa

  android-build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    - name: setup actions
      uses: actions/checkout@v1

    - name: setup java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    - name: setup flutter
      uses: subosito/flutter-action@v1
      with:
        channel: 'stable' 

    - name: configure release keys
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}
        KEYCONFIG: ${{ secrets.KEYCONFIG }}
      run: | 
        mkdir -p android/app/keys
        echo "$KEYSTORE" | base64 -d > android/app/keys/key.pkcs
        echo "$KEYCONFIG" | base64 -d > android/app/keys/key.properties

    - name: configure release version
      id: git_vars
      run: |
        echo "GITHUB_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: get dependencies
      run: flutter pub get

    - name: build release
      run: flutter build apk --dart-define=branch=$GITHUB_BRANCH --dart-define=commit=$GITHUB_SHA_SHORT

    - name: upload release
      uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
